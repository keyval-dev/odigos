name: Release
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: git fetch --force --tags
      - name: Set env
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.19.2'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Autoscaler Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/keyval-dev/odigos/autoscaler:${{ steps.vars.outputs.tag }}
          build-args: SERVICE_NAME=autoscaler
      - name: Build Scheduler Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/keyval-dev/odigos/scheduler:${{ steps.vars.outputs.tag }}
          build-args: SERVICE_NAME=scheduler
      - name: Build Instrumentor Image
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ghcr.io/keyval-dev/odigos/instrumentor:${{ steps.vars.outputs.tag }}
          build-args: SERVICE_NAME=instrumentor
      - name: Build Detector Image
        uses: docker/build-push-action@v3
        with:
          file: langDetector/Dockerfile
          push: true
          tags: ghcr.io/keyval-dev/odigos/lang-detector:${{ steps.vars.outputs.tag }}
          build-args: SERVICE_NAME=langDetector
      - name: Build UI Image
        uses: docker/build-push-action@v3
        with:
          file: ui/Dockerfile
          context: ui/
          push: true
          tags: ghcr.io/keyval-dev/odigos/ui:${{ steps.vars.outputs.tag }}
      - uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}