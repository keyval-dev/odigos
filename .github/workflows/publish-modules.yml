name: Publish Modules

on:
  push:
    tags:
      - "v*"

jobs:
  tag-modules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Extract Tag
        id: extract_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: tag api
        run: |
          git tag api/${{ steps.extract_tag.outputs.tag }}

      - name: tag common
        run: |
          git tag common/${{ steps.extract_tag.outputs.tag }}

      - name: tag odiglet
        run: |
          git tag odiglet/${{ steps.extract_tag.outputs.tag }}

      - name: Push Module Tags
        run: |
          git push origin --tags

      - name: Trigger Release PR in Odigos Enterprise
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.RELEASE_BOT_TOKEN }}" \
            https://api.github.com/repos/keyval-dev/odigos-enterprise/dispatches \
            -d '{"event_type": "create_release_pr", "client_payload": {"tag": "${{ steps.extract_tag.outputs.tag }}"}}'

  publish-docker-images:
    strategy:
      matrix:
        include:
          - service: autoscaler
            runner: ubuntu-latest
          - service: scheduler
            runner: ubuntu-latest
          - service: instrumentor
            runner: ubuntu-latest
          - service: odiglet
            runner: large-runner
    runs-on: ${{ matrix.runner }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Extract Tag
        id: extract_tag
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
  
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
  
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: keyval/odigos-${{ matrix.service }}:${{ steps.extract_tag.outputs.tag }}
          build-args: SERVICE_NAME=${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.service == 'odiglet' && 'odiglet/Dockerfile' || 'Dockerfile' }}
  